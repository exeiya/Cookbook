{"version":3,"sources":["components/IngredientInputTable.js","components/RecipeForm.js","services/recipes.js","reducers/notificationReducer.js","reducers/recipeReducer.js","components/CreateRecipe.js","components/ModifyRecipe.js","components/RecipeList.js","reducers/loginModalReducer.js","components/RecipeComments.js","services/users.js","services/login.js","reducers/loginReducer.js","reducers/userReducer.js","components/Recipe.js","components/Notification.js","components/RecipeCard.js","components/Dashboard.js","components/MenuBar.js","components/LoginForm.js","components/Users.js","components/SignupForm.js","components/User.js","App.js","index.js","assets/default_picture.jpg"],"names":["IngredientInputTable","_ref","ingredients","setIngredients","errors","setErrors","handleIngredientChange","field","_ref2","target","map","ingredient","id","name","Object","objectSpread","defineProperty","value","ingredientIds","filter","val","addedIngredients","error","includes","react_default","a","createElement","key","Form","Field","onChange","placeholder","amount","length","Button","basic","color","type","onClick","style","fontWeight","Group","grouped","paddingBottom","Icon","event","preventDefault","concat","shortid","generate","marginBottom","withRouter","props","_useState","useState","values","cookingTime","split","cookingTimeUnit","title","instructions","_useState2","slicedToArray","setValues","_useState3","i","_useState4","_useState5","_useState6","imgFile","setImgFile","_useState7","_useState8","_useState9","_useState10","isSubmitting","setIsSubmitting","cookingTimeOptions","text","validateFields","fieldErrors","category","file","size","image","forEach","errorExists","push","isValid","entries","handleSubmit","_ref3","asyncToGenerator","regenerator_default","mark","_callee","recipe","recipeData","submitted","wrap","_context","prev","next","FormData","append","JSON","stringify","onSubmit","sent","history","redirectPathOnSubmit","stop","_x","apply","this","arguments","handleChange","showError","padding","removeImage","img","Grid","Row","columns","centered","Column","width","noValidate","stackable","_ref5","required","components_IngredientInputTable","imgSrc","url","preview","htmlFor","maxWidth","cursor","Image","bordered","rounded","src","maxHeight","Segment","opacity","position","zIndex","accept","_ref4","files","URL","createObjectURL","handleImageChange","content","icon","marginTop","marginLeft","imageField","servings","Input","_ref6","label","labelPosition","min","_ref7","action","Select","compact","options","defaultValue","e","_ref8","fluid","_ref9","textAlign","submitButton","positive","disabled","loading","submitButtonText","baseUrl","token","services_recipes","getAll","response","axios","get","abrupt","data","create","_callee2","config","_context2","headers","Authorization","post","likeRecipe","_callee3","res","_context3","patch","likes","_x2","setToken","newToken","addComment","_callee4","comment","_context4","_x3","_x4","removeRecipe","_callee5","recipeId","_context5","delete","_x5","update","_callee6","_context6","put","_x6","_x7","notify","msg","notifType","dispatch","setNotification","setTimeout","notificationReducer","state","undefined","recipeReducer","toConsumableArray","likedRecipe","r","comments","removedRecipe","updatedRecipe","connect","addRecipe","newRecipe","recipeService","t0","console","log","components_RecipeForm","loggedUser","updateRecipe","user","goBack","react_router","to","recipes","setFilter","sortBy","setSortBy","recipesToShow","toLowerCase","recipeCardStyle","margin","recipeList","sort","b","aTitle","bTitle","Date","date","sortRecipes","Card","as","Link","minHeight","Label","backgroundColor","picture","Content","Header","loggedUserOptions","stretched","pathname","tab","Dropdown","inline","header","doubling","openLoginModal","loginModalReducer","setComment","Fragment","Comment","minWidth","dividing","idx","bgcolor","_id","Author","username","Metadata","toLocaleString","Text","commentBox","window","scrollTo","services_users","updateFavoriteRecipes","favorite","removeId","userId","services_login","login","credentials","logout","localStorage","clear","userService","loginReducer","userReducer","u","find","_action$data","_action$data2","isFavorited","users","userfavorites","favoriteRecipes","ownProps","favoriteRecipe","updatedUser","showRemoveModal","setShowRemoveModal","handleClick","handleRemove","padded","Modal","open","onClose","Actions","react_router_dom","paddingTop","verticalAlign","pointing","paddingRight","Table","unstackable","HeaderCell","colSpan","Body","Cell","whiteSpace","components_RecipeComments","notification","Message","RecipeCard","overflow","randomArray","random","Math","floor","components_RecipeCard","getRandomRecipes","newestRecipes","Array","getNewestRecipes","loginDropdownTrigger","loggedUserStyle","borderRadius","Menu","Item","item","trigger","loginModal","closeLoginModal","loginService","setItem","setUsername","password","setPassword","setError","errorMsg","negative","iconPosition","Divider","UserCard","searchFilter","setSearchFilter","searchResult","setSearchResult","matchingUsers","searchUsers","fontSize","Users_UserCard","slice","sortedByRecipes","mostRecipes","createUser","newUser","passwordConfirm","showAccordion","setShowAccordion","RegExp","test","usernameDuplicate","float","Accordion","Title","active","List","removeUser","selectedTab","loggedUserProfile","recipeGrid","paneStyle","recipePane","Tab","Pane","favoritesPane","panesToShow","menuItem","render","panes","defaultActiveIndex","Number","initializeRecipes","initializeUsers","setInitialLoggedUser","useEffect","storedLoggedUser","getItem","parse","recipeById","Container","components_MenuBar","components_LoginForm","components_Notification","exact","path","components_Dashboard","components_RecipeList","components_CreateRecipe","match","components_Recipe","params","components_ModifyRecipe","components_Users","location","components_User","components_SignupForm","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.23c84976.chunk.js","sourcesContent":["import React from 'react';\nimport shortid from 'shortid';\nimport { Form, Button, Icon } from 'semantic-ui-react';\n\nconst IngredientInputTable = ({ ingredients, setIngredients, errors, setErrors }) => {\n  const addIngredient = (event) => {\n    event.preventDefault();\n    setIngredients(ingredients.concat({\n      id: shortid.generate(),\n      name: '',\n      amount: ''\n    })\n    );\n  };\n\n  const handleIngredientChange = (field) => ({ target }) => {\n    setIngredients(\n      ingredients.map((ingredient) => ingredient.id === target.name\n        ? { ...ingredient, [field]: target.value }\n        : ingredient\n      )\n    );\n    setErrors({ ...errors,\n      ingredientIds: errors.ingredientIds.filter(val => val !== target.name),\n      ingredients: null });\n  };\n\n  const removeIngredient = (id) => () => {\n    setIngredients(ingredients.filter(ingredient => ingredient.id !== id));\n    setErrors({ ...errors,\n      ingredientIds: errors.ingredientIds.filter(val => val !== id),\n      ingredients: null });\n  };\n\n  const addedIngredients = ingredients.map((ingredient) => {\n    const error = errors.ingredientIds.includes(ingredient.id) && true;\n    return (\n      <tr key={ingredient.id}>\n        <td>\n          <Form.Field error={error}>\n            <input\n              value={ingredient.name}\n              name={ingredient.id}\n              onChange={handleIngredientChange('name')}\n              placeholder=\"Ainesosan nimi\"\n            />\n          </Form.Field>\n        </td>\n        <td>\n          <Form.Field error={error}>\n            <input\n              value={ingredient.amount}\n              name={ingredient.id}\n              onChange={handleIngredientChange('amount')}\n              placeholder=\"Ainesosan määrä\"\n            />\n          </Form.Field>\n        </td>\n        <td>\n          {ingredients.length > 1\n            ? <Button basic color=\"orange\" type=\"button\" onClick={removeIngredient(ingredient.id)}>\n              <span style={{ fontWeight: 'bold' }}>Poista</span></Button>\n            : null}\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <Form.Group grouped>\n      <table>\n        <tbody>\n          {addedIngredients.length > 0 ? <tr><th>Ainesosa</th><th>Määrä</th></tr> : null}\n          {addedIngredients}\n        </tbody>\n      </table>\n      {errors.ingredients && <div style={{ paddingBottom: '10px' }}>\n        <Icon color=\"yellow\" name=\"exclamation triangle\" /> {errors.ingredients}</div>}\n      <Button type=\"button\" onClick={addIngredient} color=\"teal\" style={{ marginBottom: '10px' }}>Lisää uusi ainesosa</Button>\n    </Form.Group>\n  );\n};\n\nexport default IngredientInputTable;","import React, { useState } from 'react';\nimport shortid from 'shortid';\nimport { withRouter } from 'react-router-dom';\nimport { Form, Icon, Select, Input, Grid, Image, Segment, Button } from 'semantic-ui-react';\nimport IngredientInputTable from './IngredientInputTable';\n\nconst RecipeForm = (props) => {\n  const [values, setValues] = useState(props.values\n    ? { ...props.values,\n      cookingTime: props.values.cookingTime ? props.values.cookingTime.split(' ')[0] : null,\n      cookingTimeUnit: props.values.cookingTime ? props.values.cookingTime.split(' ')[1] : null }\n    : { title: '', instructions: '' });\n  const [ingredients, setIngredients] = useState(\n    props.values ? props.values.ingredients.map(i => ({ ...i, id: shortid.generate() })) :\n      [{\n        id: shortid.generate(),\n        name: '',\n        amount: ''\n      }]\n  );\n  const [ imgFile, setImgFile ] = useState();\n  const [errors, setErrors] = useState({ ingredientIds: [] });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const categoryOptions = [\n    { key: 'dinner', value: 'pääruoka', text: 'Pääruoka' },\n    { key: 'dessert', value: 'jälkiruoka', text: 'Jälkiruoka' },\n    { key: 'salad', value: 'salaatti', text: 'Salaatti' },\n    { key: 'other', value: 'muu', text: 'Muu' }\n  ];\n\n  const cookingTimeOptions = [\n    { key: 'minute', value: 'minuuttia', text: 'minuuttia' },\n    { key: 'hour', value: 'tuntia', text: 'tuntia' }\n  ];\n\n  const validateFields = () => {\n    let fieldErrors = { ...errors };\n    if (values.title.length < 3) {\n      fieldErrors.title = 'Reseptin nimen tulee olla vähintään 3 merkin pituinen';\n    }\n\n    if (values.instructions.length === 0) {\n      fieldErrors.instructions = 'Reseptillä täytyy olla ohje';\n    }\n\n    if (!values.category) {\n      fieldErrors.category = 'Valitse reseptille kategoria';\n    }\n\n    if (imgFile && (imgFile.file.size > 1000000)) {\n      fieldErrors.image = 'Kuvan koko voi olla enintään 1 MB';\n    } else if (imgFile && !['image/jpg', 'image/png', 'image/gif', 'image/jpeg'].includes(imgFile.file.type)) {\n      fieldErrors.image = 'Vain tietyt kuvatiedostot ovat tuettuja (jpg, jpeg, png, gif)';\n    }\n\n    ingredients.forEach(ingredient => {\n      const errorExists = fieldErrors.ingredientIds.includes(ingredient.id);\n      if (ingredient.name.length === 0) {\n        if (!errorExists) fieldErrors.ingredientIds.push(ingredient.id);\n        fieldErrors.ingredients = 'Ainesosilla täytyy olla nimi';\n      } else if (ingredient.name.length > 0 && errorExists) {\n        fieldErrors.ingredientIds = fieldErrors.ingredientIds.filter(value => value !== ingredient.id);\n      }\n    });\n\n    setErrors(fieldErrors);\n    let isValid = true;\n    Object.entries(fieldErrors).forEach(([key, value]) => {\n      if(key === 'ingredientIds') {\n        if (value.length > 0) isValid = false;\n        return;\n      } else if (value) {\n        isValid = false;\n      }\n    });\n\n    return isValid;\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const recipe = {\n      ...values,\n      ingredients: ingredients\n        .map(ingredient => {\n          return ({ name: ingredient.name, amount: ingredient.amount });\n        }),\n    };\n\n    if(values.cookingTime) {\n      recipe.cookingTime = `${values.cookingTime} ${values.cookingTimeUnit || cookingTimeOptions[0].value}`;\n    }\n\n    if (validateFields()) {\n      setIsSubmitting(true);\n      let recipeData;\n      if (imgFile) {\n        recipeData = new FormData();\n        recipeData.append('image', imgFile.file);\n        recipeData.append('recipe', JSON.stringify(recipe));\n      } else {\n        recipeData = recipe;\n      }\n      let submitted;\n      // If the recipe already exists, we must include the id to update it\n      if (props.values) {\n        submitted = await props.onSubmit(recipeData, props.values.id);\n      } else {\n        submitted = await props.onSubmit(recipeData);\n      }\n\n      if (submitted) {\n        props.history.push(props.redirectPathOnSubmit);\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  };\n\n  const handleChange = (target) => {\n    setValues({ ...values, [target.name]: target.value });\n    setErrors({ ...errors, [target.name]: null });\n  };\n\n  const handleImageChange = (target) => {\n    const file = target.files[0];\n    setErrors({ ...errors, image: null });\n    if(!file) return setImgFile(null);\n    setImgFile({\n      file,\n      name: file.name,\n      preview: URL.createObjectURL(file)\n    });\n  };\n\n  const showError = (field) => {\n    if (errors[field]) {\n      return (\n        <div style={{ padding: '5px' }}>\n          <Icon color=\"yellow\" name=\"exclamation triangle\" />\n          {errors[field]}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const removeImage = () => {\n    setImgFile(null);\n    if (values.img) setValues({ ...values, img: null });\n  };\n\n  const imageField = () => {\n    let imgSrc = null;\n    if (!imgFile && values.img) {\n      imgSrc = values.img.url;\n    } else if (imgFile) {\n      imgSrc = imgFile.preview;\n    }\n\n    return (\n      <Form.Field error={errors.image && true}>\n        <label>Kuva {errors.image && showError('image')}</label>\n        <label htmlFor=\"image\" style={{ maxWidth: '200px', cursor: 'pointer' }}>\n          {imgSrc\n            ? <Image bordered rounded src={imgSrc} size=\"medium\" style={{ maxWidth: '200px', maxHeight: '200px' }}/>\n            : <Segment><Icon name=\"upload\" /> Lataa kuva</Segment>}\n        </label>\n        <input\n          style={{ opacity: 0, position: 'absolute', zIndex: -1 }}\n          id=\"image\"\n          type=\"file\"\n          name=\"image\"\n          accept=\"image/*\"\n          onChange={({ target }) => handleImageChange(target) } />\n        { !imgSrc ? null : <Button color=\"red\" content=\"Poista kuva\" icon=\"trash alternate\" type=\"button\"\n          style={{ marginTop: '5px', marginLeft: '10%' }} onClick={removeImage}/>}\n      </Form.Field>\n    );\n  };\n\n  return (\n    <Grid.Row columns={1} centered>\n      <Grid.Column width={12}>\n        <Form onSubmit={handleSubmit} noValidate>\n          <Grid stackable>\n            <Grid.Row columns={2}>\n              <Grid.Column width={10}>\n                <Form.Field  width={8} error={errors.title && true}>\n                  <label>Reseptin nimi</label>\n                  {errors.title && showError('title')}\n                  <input\n                    onChange={({ target }) => handleChange(target)}\n                    name=\"title\"\n                    value={values.title}\n                    placeholder=\"Reseptin nimi\"\n                    required />\n                </Form.Field>\n                <IngredientInputTable ingredients={ingredients} setIngredients={setIngredients} errors={errors} setErrors={setErrors} />\n              </Grid.Column>\n\n              <Grid.Column width={6}>\n                {imageField()}\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n\n          <Form.Group>\n            <Form.Field width={4} error={errors.servings && true}>\n              <label>Annosmäärä</label>\n              <Input\n                onChange={({ target }) => handleChange(target)}\n                name=\"servings\"\n                label={{ basic: true, content: 'annosta' }}\n                labelPosition=\"right\"\n                type=\"number\"\n                min=\"0\"\n                value={values.servings || ''}\n              />\n            </Form.Field>\n            <Form.Field width={4} error={errors.cookingTime && true}>\n              <label>Valmistusaika</label>\n              <Input\n                onChange={({ target }) => handleChange(target)}\n                name=\"cookingTime\"\n                type=\"number\"\n                min=\"0\"\n                value={values.cookingTime || ''}\n                action>\n                <input />\n                <Select\n                  compact\n                  options={cookingTimeOptions}\n                  defaultValue={cookingTimeOptions[0].value}\n                  name=\"cookingTimeUnit\"\n                  onChange={(e, target) => handleChange(target)}\n                />\n              </Input>\n            </Form.Field>\n            <Form.Select\n              onChange={(e, { value }) => setValues({ ...values, category: value })}\n              onClick={() => setErrors({ ...errors, category: null })}\n              error={errors.category && true}\n              width={4}\n              name=\"category\"\n              fluid\n              label=\"Reseptin tyyppi\"\n              placeholder=\"Reseptin tyyppi\"\n              defaultValue={values.category}\n              options={categoryOptions}\n            />\n          </Form.Group>\n          {errors.servings && showError('servings')}\n          {errors.cookingTime && showError('cookingTime')}\n          {errors.category && showError('category')}\n\n          <Form.Field error={errors.instructions && true} >\n            <label>Ohjeet</label>\n            {errors.instructions && showError('instructions')}\n            <textarea\n              onChange={({ target }) => handleChange(target)}\n              name=\"instructions\" value={values.instructions}\n              placeholder=\"Kirjoita reseptin ohje tähän\"\n              required\n            />\n          </Form.Field>\n          <div style={{ textAlign: 'center' }}>\n            {props.submitButton}\n            <Button\n              positive\n              disabled={isSubmitting}\n              loading={isSubmitting}\n              content={props.submitButtonText} />\n          </div>\n        </Form>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\n\nexport default withRouter(RecipeForm);","import axios from 'axios';\n\nconst baseUrl = '/api/recipes';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async (recipe) => {\n  const config = { headers: { Authorization: token } };\n  const response = await axios.post(baseUrl, recipe, config);\n  return response.data;\n};\n\nconst likeRecipe = async (recipe) => {\n  const config = { headers: { Authorization: token } };\n  const res = await axios.patch(`${baseUrl}/${recipe.id}`,\n    { likes: (recipe.likes || 0) + 1 }, config);\n  return res.data;\n};\n\nconst addComment = async (recipe, comment) => {\n  const config = { headers: { Authorization: token } };\n  const res = await axios.post(`${baseUrl}/${recipe.id}/comments`,\n    { comment }, config);\n  return res.data;\n};\n\nconst removeRecipe = async (recipeId) => {\n  const config = { headers: { Authorization: token } };\n  const res = await axios.delete(`${baseUrl}/${recipeId}`, config);\n  return res.data;\n};\n\nconst update = async (recipe, recipeId) => {\n  const config = { headers: { Authorization: token } };\n  const res = await axios.put(`${baseUrl}/${recipeId}`, recipe, config);\n  return res.data;\n};\n\nexport default {\n  getAll,\n  create,\n  likeRecipe,\n  setToken,\n  addComment,\n  removeRecipe,\n  update\n};","const notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return {\n        msg: action.msg,\n        notifType: action.notifType\n      };\n    case 'REMOVE_NOTIFICATION':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (msg, notifType)  => {\n  return {\n    type: 'SET_NOTIFICATION',\n    msg,\n    notifType\n  };\n};\n\nexport const removeNotification = () => {\n  return {\n    type: 'REMOVE_NOTIFICATION'\n  };\n};\n\nexport const notify = (msg, notifType) => dispatch => {\n  dispatch(setNotification(msg, notifType));\n  setTimeout(() => dispatch(removeNotification()), 5000);\n};\n\nexport default notificationReducer;","import recipeService from '../services/recipes';\nimport { notify } from '../reducers/notificationReducer';\n\nconst recipeReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_RECIPES':\n      return action.data;\n    case 'ADD_RECIPE':\n      return [...state, action.data ];\n    case 'LIKE_RECIPE': {\n      const likedRecipe = action.data;\n      return state.map(r => r.id === likedRecipe.id ? likedRecipe : r);\n    }\n    case 'ADD_COMMENT': {\n      const recipe = action.data;\n      return state.map(r => r.id === recipe.id\n        ? { ...recipe, comments: recipe.comments }\n        : r);\n    }\n    case 'REMOVE_RECIPE': {\n      const removedRecipe = action.data;\n      return state.filter(r => r.id !== removedRecipe.id);\n    }\n    case 'UPDATE_RECIPE': {\n      const updatedRecipe = action.data;\n      return state.map(r => r.id === updatedRecipe.id\n        ? updatedRecipe : r);\n    }\n    default:\n      return state;\n  }\n};\n\nexport const initializeRecipes = () => {\n  return async dispatch => {\n    const recipes = await recipeService.getAll();\n    dispatch({\n      type: 'INIT_RECIPES',\n      data: recipes\n    });\n  };\n};\n\nexport const addRecipe = (recipe) => {\n  return async dispatch => {\n    try {\n      const newRecipe = await recipeService.create(recipe);\n      dispatch({\n        type: 'ADD_RECIPE',\n        data: newRecipe\n      });\n      dispatch(notify(`Uusi resepti '${newRecipe.title}' lisätty!`, 'success'));\n      return true;\n    } catch (error) {\n      console.log(error);\n      dispatch(notify('Virhe reseptin luonnissa! Uutta reseptiä ei luotu.', 'error'));\n      return false;\n    }\n  };\n};\n\nexport const likeRecipe = (recipe) => {\n  return async dispatch => {\n    const likedRecipe = await recipeService.likeRecipe(recipe);\n    dispatch({\n      type: 'LIKE_RECIPE',\n      data: likedRecipe\n    });\n  };\n};\n\nexport const addComment = (recipe, comment) => {\n  return async dispatch => {\n    const updatedRecipe = await recipeService.addComment(recipe, comment);\n    dispatch({\n      type: 'ADD_COMMENT',\n      data: updatedRecipe\n    });\n  };\n};\n\nexport const removeRecipe = (recipe) => {\n  return async dispatch => {\n    await recipeService.removeRecipe(recipe.id);\n    dispatch({\n      type: 'REMOVE_RECIPE',\n      data: recipe\n    });\n  };\n};\n\nexport const updateRecipe = (recipe, id) => {\n  return async dispatch => {\n    try {\n      const updatedRecipe = await recipeService.update(recipe, id);\n      dispatch({\n        type: 'UPDATE_RECIPE',\n        data: updatedRecipe\n      });\n      dispatch(notify(`Reseptin ${updatedRecipe.title} muutokset tallennettu!`, 'success'));\n      return true;\n    } catch (error) {\n      console.log(error);\n      dispatch(notify('Reseptin muokkaaminen ei onnistunut, muutoksia ei tallennettu', 'error'));\n      return false;\n    }\n  };\n};\n\nexport default recipeReducer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid } from 'semantic-ui-react';\nimport RecipeForm from './RecipeForm';\nimport { addRecipe } from '../reducers/recipeReducer';\n\nconst CreateRecipe = (props) => {\n\n  return (\n    <Grid>\n      <Grid.Row columns={1}>\n        <Grid.Column>\n          <div style={{ textAlign: 'center' }}>\n            <h2>Luo uusi resepti</h2>\n          </div>\n        </Grid.Column>\n      </Grid.Row>\n      <RecipeForm\n        onSubmit={props.addRecipe}\n        submitButtonText=\"Lisää resepti\"\n        redirectPathOnSubmit=\"/\" />\n    </Grid>\n  );\n};\n\nexport default connect(\n  null,\n  { addRecipe }\n)(CreateRecipe);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { Grid, Button } from 'semantic-ui-react';\nimport RecipeForm from './RecipeForm';\nimport { updateRecipe } from '../reducers/recipeReducer';\n\nconst ModifyRecipe = ({ recipe, updateRecipe, loggedUser, history }) => {\n  if (!recipe) return null;\n  if ( !loggedUser || !recipe.user || (recipe.user.id !== loggedUser.id)) return (<Redirect to=\"/recipes\" />);\n  return (\n    <Grid>\n      <Grid.Row columns={1}>\n        <Grid.Column>\n          <div style={{ textAlign: 'center' }}>\n            <h2>Muokkaa reseptiä</h2>\n          </div>\n        </Grid.Column>\n      </Grid.Row>\n      <RecipeForm\n        onSubmit={updateRecipe}\n        values={recipe}\n        submitButtonText=\"Tallenna muutokset\"\n        redirectPathOnSubmit={`/recipes/${recipe.id}`} />\n      <Grid.Row columns={1}>\n        <Grid.Column>\n          <div style={{ textAlign: 'center' }}>\n            <Button content=\"Takaisin reseptiin\" onClick={() => history.goBack()} />\n          </div>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default connect(\n  state => ({\n    loggedUser: state.loggedUser\n  }),\n  { updateRecipe }\n)(withRouter(ModifyRecipe));","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Grid, Input, Button, Icon, Image, Label, Dropdown } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport picture from '../assets/default_picture.jpg';\n\nconst RecipeList = ({ history, recipes, loggedUser }) => {\n  const [ filter, setFilter ] = useState('');\n  const [ sortBy, setSortBy ] = useState(null);\n\n  const recipesToShow = filter\n    ? recipes.filter(recipe => recipe.title.toLowerCase().includes(filter.toLowerCase()))\n    : recipes;\n\n  const sortRecipes = (recipes) => {\n    if (sortBy === 'title') {\n      recipes.sort((a, b) => {\n        const aTitle = a.title.toLowerCase();\n        const bTitle = b.title.toLowerCase();\n        if (aTitle > bTitle) {\n          return 1;\n        } else if (aTitle < bTitle) {\n          return -1;\n        }\n        return 0;\n      });\n    } else if (sortBy === 'likes') {\n      recipes.sort((a, b) => {\n        return b.likes - a.likes;\n      });\n    } else if (sortBy === 'newest') {\n      recipes.sort((a, b) => {\n        return new Date(b.date) - new Date(a.date);\n      });\n    }\n\n    return recipes;\n  };\n\n  const recipeCardStyle = {\n    position: 'absolute',\n    zIndex: 1,\n    width: '92%',\n    textAlign: 'right',\n    margin: '10px',\n    color: 'black'\n  };\n\n  const recipeList = sortRecipes(recipesToShow).map(recipe =>\n    <Grid.Column key={recipe.id}>\n      <Card as={Link} to={`/recipes/${recipe.id}`} color=\"teal\" style={{ minHeight: '230px' }}>\n        <div style={recipeCardStyle}>\n          <Label size=\"large\" style={{ backgroundColor: 'rgba(232, 232, 232, 0.8)' }}>\n            <Icon name=\"heart\" color=\"red\"/>\n            {recipe.likes || 0}\n          </Label>\n        </div>\n        <Image src={(recipe.img && recipe.img.url) ? recipe.img.url : picture} style={{ maxHeight: '200px' }} />\n        <Card.Content>\n          <Card.Header>\n            {recipe.title}\n          </Card.Header>\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n\n  const loggedUserOptions = (\n    <Grid.Row centered columns={1} stretched>\n      <Grid.Column width={3}>\n        <Button color=\"teal\" onClick={() => history.push({\n          pathname: `/users/${loggedUser.id}`, state: { tab: 0 } })}>\n          <Icon name=\"book\"/> Omat reseptit\n        </Button>\n      </Grid.Column>\n      <Grid.Column width={3}>\n        <Button color=\"orange\" onClick={() => history.push({\n          pathname: `/users/${loggedUser.id}`, state: { tab: 1 } })}>\n          <Icon name=\"star\"/>Suosikit\n        </Button>\n      </Grid.Column>\n      <Grid.Column width={3}>\n        <Button as={Link} to=\"/recipes/create\" color=\"green\"><Icon name=\"plus\"/>Luo uusi resepti</Button>\n      </Grid.Column>\n    </Grid.Row>\n  );\n\n  const sortOptions = [\n    {\n      key: 'title',\n      text: 'Nimen mukaan',\n      value: 'title'\n    },\n    {\n      key: 'likes',\n      text: 'Eniten tykkäyksiä',\n      value: 'likes',\n    },\n    {\n      key: 'newest',\n      text: 'Viimeksi lisätyt',\n      value: 'newest',\n    }\n  ];\n\n  return (\n    <Grid >\n      {loggedUser === null ? null : loggedUserOptions}\n      <Grid.Row centered columns={1}>\n        <Grid.Column textAlign=\"center\" width={14}>\n          <h3>Hae reseptejä</h3>\n          <Input icon=\"search\" onChange={({ target }) => setFilter(target.value)} value={filter} />\n\n          <div style={{ textAlign: 'right' }}><Icon name=\"sort alphabet down\" />\n            <Dropdown\n              inline\n              header=\"Järjestä reseptit\"\n              options={sortOptions}\n              placeholder=\"Järjestä reseptit\"\n              onChange={(e, target) => setSortBy(target.value)} />\n          </div>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row centered columns={3}>\n        <Grid.Column />\n        <Grid.Column width={14}>\n          <Grid stackable doubling columns={3}>{recipeList}</Grid>\n        </Grid.Column>\n        <Grid.Column />\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes,\n    loggedUser: state.loggedUser\n  };\n};\n\nexport default connect(\n  mapStateToProps\n)(withRouter(RecipeList));","const loginModalReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'OPEN_LOGIN_MODAL':\n      return true;\n    case 'CLOSE_LOGIN_MODAL':\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport const openLoginModal = () => {\n  return dispatch => {\n    dispatch({\n      type: 'OPEN_LOGIN_MODAL'\n    });\n  };\n};\n\nexport const closeLoginModal = () => {\n  return dispatch => {\n    dispatch({\n      type: 'CLOSE_LOGIN_MODAL'\n    });\n  };\n};\n\nexport default loginModalReducer;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Comment, Header, Icon, Form, Button } from 'semantic-ui-react';\nimport { addComment } from '../reducers/recipeReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport { openLoginModal } from '../reducers/loginModalReducer';\n\nconst RecipeComments = ({ recipe, loggedUser, addComment, notify, openLoginModal  }) => {\n  const [comment, setComment] = useState('');\n\n  const handleSubmit = () => async (event) => {\n    event.preventDefault();\n    if (comment.length === 0) return;\n    try {\n      await addComment(recipe, comment);\n      setComment('');\n    } catch (e) {\n      console.log(e);\n      notify('Jotain meni vikaan. Uutta kommenttia ei luotu.', 'error');\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const commentField = () => {\n    if (!loggedUser) {\n      return (\n        <div style={{ marginTop: '30px', marginBottom: '20px' }}>\n          Haluatko jättää kommentin?\n          <span onClick={() => openLoginModal()}\n            style={{ color: '#4183c4', cursor: 'pointer' }}> Kirjaudu sisään.\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <Form>\n        <textarea\n          value={comment}\n          style={{ marginTop: '30px', marginBottom: '15px' }}\n          onChange={({ target }) => setComment(target.value)} />\n        <Button\n          icon=\"edit\"\n          content=\"Lisää kommentti\"\n          color=\"teal\"\n          labelPosition=\"left\"\n          onClick={handleSubmit()} />\n      </Form>\n    );\n  };\n\n  const commentBox = (idx, comment) => {\n    const bgcolor = idx % 2 === 0 ? '#ffffff' : '#e8fefe';\n    return (\n      <Comment key={comment._id} style={{ padding: '20px', backgroundColor: bgcolor }}>\n        <Comment.Content>\n          <Icon name=\"user\" />\n          <Comment.Author as={Link} to={`/users/${comment.user.id}`}>{comment.user.username}</Comment.Author>\n          <Comment.Metadata>{new Date(comment.date).toLocaleString()}</Comment.Metadata>\n          <Comment.Text>{comment.content}</Comment.Text>\n        </Comment.Content>\n      </Comment>\n    );\n  };\n\n  const commentsToShow = () => {\n    if (!recipe.comments || recipe.comments.length === 0) {\n      return (\n        <div style={{ padding: '20px' }}>Tällä reseptillä ei ole vielä kommentteja.</div>\n      );\n    }\n\n    return recipe.comments.map((comment, idx) => commentBox(idx, comment));\n  };\n\n  return (\n    <>\n    <Comment.Group style={{ minWidth: '80%', marginTop: '50px' }}>\n      <Header dividing>Kommentit</Header>\n      {commentsToShow()}\n      {commentField()}\n    </Comment.Group>\n    </>\n  );\n};\n\nexport default connect(\n  state => ({\n    loggedUser: state.loggedUser\n  }),\n  { addComment, notify, openLoginModal }\n)(RecipeComments);","import axios from 'axios';\n\nconst baseUrl = '/api/users';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const res = await axios.get(baseUrl);\n  return res.data;\n};\n\nconst create = async (user) => {\n  const res = await axios.post(baseUrl, user);\n  return res.data;\n};\n\nconst updateFavoriteRecipes = async (id, recipeId) => {\n  const config = { headers: { Authorization: token } };\n  const res = await axios.patch(`${baseUrl}/${id}`, { favorite: recipeId }, config);\n  return res.data;\n};\n\nconst removeId = async(userId) => {\n  const config = { headers: { Authorization: token } };\n  const res = await axios.delete(`${baseUrl}/${userId}`, config);\n  return res.data;\n};\n\nexport default { getAll, create, updateFavoriteRecipes, setToken, removeId };","import axios from 'axios';\n\nconst login = async (credentials) => {\n  const res = await axios.post('/api/login', credentials);\n  return res.data;\n};\n\nexport default { login };","import loginService from '../services/login';\nimport recipeService from '../services/recipes';\nimport userService from '../services/users';\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'INIT_LOGGED_USER':\n      return { ...action.user };\n    case 'LOGIN':\n      return { ...action.user };\n    case 'LOGOUT':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport const setInitialLoggedUser = (user) => dispatch => {\n  recipeService.setToken(user.token);\n  userService.setToken(user.token);\n  dispatch({\n    type: 'INIT_LOGGED_USER',\n    user: ({ id: user.id, username: user.username })\n  });\n};\n\nexport const login = (user) => async dispatch => {\n  const loggedUser = await loginService.login(user);\n  window.localStorage.setItem('loggedCookbookUser', JSON.stringify(loggedUser));\n  recipeService.setToken(loggedUser.token);\n  userService.setToken(loggedUser.token);\n  dispatch({\n    type: 'LOGIN',\n    user: { id: loggedUser.id, username: loggedUser.username }\n  });\n};\n\nexport const logout = () => dispatch => {\n  window.localStorage.clear();\n  recipeService.setToken(null);\n  userService.setToken(null);\n  dispatch({\n    type: 'LOGOUT'\n  });\n};\n\nexport default loginReducer;","import userService from '../services/users';\nimport { logout } from './loginReducer';\n\nconst userReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INITIALIZE_USERS':\n      return action.data;\n    case 'ADD_USER':\n      return [...state, action.data];\n    case 'UPDATE_USER':\n      return state.map(u => u.id !== action.data.id ? u : action.data);\n    case 'ADD_RECIPE': {\n      const user = state.find(u => u.id === action.data.user.id);\n      if (!user) return state;\n      const { id, title, category, date, img } = action.data;\n      const recipes = user.recipes.concat({ id, title, category, date, img });\n      return state.map(u => u.id !== user.id ? u : { ...user, recipes });\n    }\n    case 'UPDATE_RECIPE': {\n      const user = state.find(u => u.id === action.data.user.id);\n      if (!user) return state;\n      const { id, title, category, date, img } = action.data;\n      const recipes = user.recipes.map(r => r.id !== id ? r : { id, title, category, date, img });\n      return state.map(u => u.id !== user.id ? u : { ...user, recipes });\n    }\n    case 'REMOVE_USER':\n      return state.filter(u => u.id !== action.data.id);\n    default:\n      return state;\n  }\n};\n\nexport const initializeUsers = () => async (dispatch) => {\n  const users = await userService.getAll();\n  dispatch({\n    type: 'INITIALIZE_USERS',\n    data: users\n  });\n};\n\nexport const createUser = (user) => async (dispatch) => {\n  const newUser = await userService.create(user);\n  dispatch({\n    type: 'ADD_USER',\n    data: newUser\n  });\n};\n\nexport const favoriteRecipe = (id, recipe) => async (dispatch) => {\n  const updatedUser = await userService.updateFavoriteRecipes(id, recipe);\n  dispatch({\n    type: 'UPDATE_USER',\n    data: updatedUser\n  });\n};\n\nexport const removeUser = (id) => async (dispatch) => {\n  await userService.removeId(id);\n  dispatch(logout());\n  dispatch({\n    type: 'REMOVE_USER',\n    data: { id }\n  });\n};\n\nexport default userReducer;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Grid, Image, Icon, Label, Button, Modal } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport RecipeComments from '../components/RecipeComments';\nimport picture from '../assets/default_picture.jpg';\nimport { likeRecipe, removeRecipe } from '../reducers/recipeReducer';\nimport { favoriteRecipe } from '../reducers/userReducer';\nimport { openLoginModal } from '../reducers/loginModalReducer';\nimport { notify } from '../reducers/notificationReducer';\n\nconst Recipe = (props) => {\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const { recipe, likeRecipe, favoriteRecipe,\n    loggedUser, isFavorited, openLoginModal, removeRecipe } = props;\n  if (!recipe) return null;\n\n  const handleClick = () => ({ target }) => {\n    if (!loggedUser) {\n      openLoginModal();\n    } else if (target.name === 'like') {\n      likeRecipe(recipe);\n    } else if (target.name === 'favorite') {\n      favoriteRecipe(loggedUser.id, recipe.id);\n    }\n  };\n\n  const removeRecipeModal = () => (\n    <Modal size=\"tiny\" open={showRemoveModal} onClose={() => setShowRemoveModal(false)}>\n      <Modal.Header>Poistetaanko resepti?</Modal.Header>\n      <Modal.Content>\n        <p>Haluatko varmasti poistaa reseptin\n          <span style={{ fontWeight: 'bold' }}> {recipe.title}</span>?</p>\n        <p>Reseptiä ei voi palauttaa enää poistamisen jälkeen.</p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => setShowRemoveModal(false)}>Peruuta</Button>\n        <Button\n          color=\"red\"\n          icon=\"trash alternate\"\n          labelPosition=\"left\"\n          content=\"Poista resepti\"\n          onClick={handleRemove} />\n      </Modal.Actions>\n    </Modal>\n  );\n\n  const handleRemove = async () => {\n    try {\n      await removeRecipe(recipe);\n      props.history.push('/recipes');\n      props.notify(`Resepti \"${recipe.title}\" poistettu`, 'success');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const showRecipeOwnerOptions = () => {\n    if (recipe.user && loggedUser && loggedUser.id === recipe.user.id) {\n      return (\n        <>\n        <Button\n          icon=\"edit\"\n          color=\"blue\"\n          labelPosition=\"left\"\n          content=\"Muokkaa reseptiä\"\n          onClick={() => props.history.push(`/recipes/${recipe.id}/update`)}\n        />\n          <div style={{ paddingTop: '5px' }}>\n            <Button\n              icon=\"trash alternate\"\n              color=\"red\"\n              labelPosition=\"left\"\n              content=\"Poista resepti\"\n              onClick={() => setShowRemoveModal(true)}\n            />\n          </div>\n        </>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <Grid stackable padded>\n      {removeRecipeModal()}\n      <Grid.Row columns={2}>\n        <Grid.Column width={12}>\n          <h3>{recipe.title}</h3>\n          {recipe.user\n            ? <div>\n              <Icon name=\"user\" />\n              <Link to={`/users/${recipe.user.id}`}>{recipe.user.username}</Link>\n            </div>\n            : null}\n        </Grid.Column>\n        <Grid.Column width={4}>\n          {showRecipeOwnerOptions()}\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row columns={3}>\n        <Grid.Column width={5}>\n          <Image src={(recipe.img && recipe.img.url) ? recipe.img.url : picture} size=\"medium\" rounded style={{ maxHeight: '240px' }}/>\n        </Grid.Column>\n        <Grid.Column verticalAlign=\"bottom\">\n          <Button as=\"div\" labelPosition=\"left\">\n            <Label as=\"a\" basic color=\"red\" pointing=\"right\">\n              <Icon name=\"heart\" /> {recipe.likes || 0}\n            </Label>\n            <Button color=\"red\" name=\"like\" onClick={handleClick()}>Tykkää</Button>\n          </Button>\n          <div style={{ marginTop: '10px' }}>\n            <Button basic={isFavorited || false} color=\"orange\" name=\"favorite\" onClick={handleClick()}>\n              <Icon name=\"star\" /> { isFavorited ? 'Poista suosikeista' : 'Lisää suosikkeihin' }\n            </Button>\n          </div>\n          <table style={{ paddingTop: '20px', paddingBottom: '20px' }}>\n            <tbody>\n              <tr>\n                <td style={{ paddingRight: '10px' }}><Icon name=\"clock outline\" /> Valmistusaika</td>\n                <td> {recipe.cookingTime || '--'}</td>\n              </tr>\n              <tr>\n                <td><Icon name=\"utensils\" /> Annosmäärä</td>\n                <td>{recipe.servings || '--' }</td>\n              </tr>\n            </tbody>\n          </table>\n          <Label color={'teal'}>{recipe.category}</Label>\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column width={4}>\n          <Table unstackable>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell colSpan=\"2\">Ainekset</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {recipe.ingredients.map(ingredient =>\n                <Table.Row key={ingredient.name} >\n                  {ingredient.amount ? <Table.Cell>{ingredient.amount}</Table.Cell> : null }\n                  <Table.Cell>{ingredient.name}</Table.Cell>\n                </Table.Row>\n              )}\n            </Table.Body>\n          </Table>\n        </Grid.Column>\n        <Grid.Column width={8}>\n          <h4>Ohjeet</h4>\n          <p style={{ whiteSpace: 'pre-line' }}>\n            {recipe.instructions}\n          </p>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row columns={1}>\n        <Grid.Column width={16} style={{ marginTop: '20px' }}>\n          <RecipeComments recipe={recipe}/>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nconst isFavorited = (loggedUser, users, recipe) => {\n  let isFavorited = null;\n  if (loggedUser && users && recipe) {\n    const user = users.find(user => user.id === loggedUser.id);\n    const userfavorites = user ? user.favoriteRecipes.map(r => r.id) : null;\n    isFavorited = userfavorites ? userfavorites.includes(recipe.id) : null;\n  }\n  return isFavorited;\n};\n\nexport default connect(\n  (state, ownProps) => ({\n    loggedUser: state.loggedUser,\n    isFavorited: isFavorited(state.loggedUser, state.users, ownProps.recipe)\n  }),\n  { likeRecipe, favoriteRecipe, openLoginModal, removeRecipe, notify }\n)(withRouter(Recipe));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Message } from 'semantic-ui-react';\n\nconst Notification = (props) => {\n  if (!props.notification) return null;\n\n  if (props.notification.notifType === 'success') {\n    return (\n      <Message color=\"green\">\n        {props.notification.msg}\n      </Message>\n    );\n  } else if (props.notification.notifType === 'error') {\n    return (\n      <Message color=\"red\">\n        {props.notification.msg}\n      </Message>\n    );\n  } else {\n    return (\n      <Message>\n        {props.notification.msg}\n      </Message>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  };\n};\n\nexport default connect(\n  mapStateToProps\n)(Notification);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Card, Image } from 'semantic-ui-react';\nimport picture from '../assets/default_picture.jpg';\n\nconst RecipeCard = ({ recipe }) => {\n  if (!recipe) return null;\n  return (\n    <Grid.Column key={recipe.id}>\n      <Card as={Link} to={`/recipes/${recipe.id}`} color=\"teal\" style={{ minHeight: '210px' }}>\n        <Image src={(recipe.img && recipe.img.url) ? recipe.img.url : picture} style={{ maxHeight: '170px' }}/>\n        <Card.Content>\n          <Card.Header style={{ overflow: 'hidden' }}>{recipe.title}</Card.Header>\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n};\n\nexport default RecipeCard;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, } from 'semantic-ui-react';\nimport RecipeCard from '../components/RecipeCard';\n\nconst Dashboard = ({ recipes }) => {\n\n  const getRandomRecipes = () => {\n    if (recipes.length === 0) return [];\n    let randomArray = [];\n    for (let i = 0; i < 4; i++) {\n      const random = Math.floor(Math.random() * recipes.length);\n      if (!randomArray.includes(random)) {\n        randomArray.push(random);\n      }\n    }\n\n    return randomArray.map(random =>\n      <RecipeCard key={recipes[random]['id']} recipe={recipes[random]} />\n    );\n  };\n\n  const getNewestRecipes = () => {\n    if (recipes.length === 0) return [];\n    let newestRecipes = new Array(4);\n    for (let i = 0; i < newestRecipes.length; i++) {\n      if (i === recipes.length) break;\n      const recipe = recipes[recipes.length-i-1];\n      newestRecipes[i] = <RecipeCard key={recipe.id} recipe={recipe} />;\n    }\n    return newestRecipes;\n  };\n\n  return (\n    <Grid padded>\n      <Grid.Row columns={1}>\n        <Grid.Column width={12}>\n          <p>Keittokirjassa tällä hetkellä {recipes.length} reseptiä!</p>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row >\n        <Grid.Column>\n          <h3>Satunnaisia reseptejä</h3>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ padding: 0, margin: 0 }}>\n        <Grid doubling columns={4} style={{ padding: 0, margin: 0 }}>\n          {getRandomRecipes()}\n        </Grid>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          <h3>Uusimmat reseptit</h3>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ padding: 0, margin: 0 }}>\n        <Grid doubling columns={4} style={{ padding: 0, margin: 0 }}>\n          {getNewestRecipes()}\n        </Grid>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes\n  };\n};\n\nexport default connect(\n  mapStateToProps\n)(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Menu, Icon, Dropdown } from 'semantic-ui-react';\nimport { openLoginModal } from '../reducers/loginModalReducer';\nimport { logout } from '../reducers/loginReducer';\n\nconst MenuBar = (props) => {\n  const loginDropdownTrigger = (\n    <span style={{ minWidth: '90px' }}>\n      <Icon name=\"user circle\" />\n      {props.loggedUser === null ? '' : props.loggedUser.username}\n    </span>\n  );\n\n  const loggedUserStyle = {\n    backgroundColor: '#00b5ad',\n    color: 'white',\n    fontWeight: 'bold',\n    borderRadius: '0 0.28571429rem 0.28571429rem 0'\n  };\n\n  const loggedUserMenu = () => {\n    if (props.loggedUser) {\n      return (\n        <Dropdown style={loggedUserStyle} item trigger={loginDropdownTrigger}>\n          <Dropdown.Menu>\n            <Dropdown.Item as={Link} to={`/users/${props.loggedUser.id}`}>\n              Oma profiili\n            </Dropdown.Item>\n            <Dropdown.Item as={Link} to=\"/recipes/create\">\n              Luo uusi resepti\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => props.logout()}>\n              Kirjaudu ulos\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      );\n    }\n\n    return (\n      <Menu.Item name=\"login\" onClick={() => props.openLoginModal()}>\n        <Icon name=\"user circle outline\" />\n        Kirjaudu sisään\n      </Menu.Item>\n    );\n  };\n\n  return (\n    <Menu>\n      <Menu.Item as={Link} to=\"/\" name=\"etusivu\" />\n      <Menu.Item as={Link} to=\"/recipes\" name=\"reseptit\" />\n      <Menu.Item as={Link} to=\"/users\" name=\"kayttajat\">Käyttäjät</Menu.Item>\n      <Menu.Menu position=\"right\">\n        {loggedUserMenu()}\n      </Menu.Menu>\n    </Menu>\n  );\n};\n\nexport default connect(\n  state => ({\n    loggedUser: state.loggedUser\n  }),\n  { openLoginModal, logout }\n)(MenuBar);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Modal, Form, Button, Divider, Message } from 'semantic-ui-react';\nimport { closeLoginModal } from '../reducers/loginModalReducer';\nimport { login } from '../reducers/loginReducer';\nimport { notify } from '../reducers/notificationReducer';\n\nconst LoginForm = (props) => {\n  const [ username, setUsername] = useState();\n  const [ password, setPassword ] = useState();\n  const [ error, setError] = useState('');\n\n  const validateFields = () => {\n    let errorMsg = '';\n    if (!username || !password) {\n      errorMsg = 'Kirjoita käyttäjätunnus ja salasana kirjautuaksesi';\n    }\n\n    setError(errorMsg);\n    return errorMsg.length === 0;\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (validateFields()) {\n      try {\n        await props.login({ username, password });\n        setUsername('');\n        setPassword('');\n        props.closeLoginModal();\n        props.history.push('/');\n        props.notify(`Tervetuloa ${username}!`, 'success');\n      } catch (error) {\n        console.log(error);\n        setError('Väärä käyttäjätunnus tai salasana');\n      }\n    }\n  };\n\n  const onSignupClick = () => () => {\n    props.closeLoginModal();\n    setError('');\n    props.history.push('/signup');\n  };\n\n  return(\n    <Modal size=\"tiny\" open={props.loginModal}  onClose={() => {\n      props.closeLoginModal();\n      setError(''); }\n    }>\n      <div style={{ padding: '40px' }}>\n        <div style={{ textAlign: 'center', paddingBottom: '20px' }}>\n          <h2>Kirjaudu sisään</h2>\n        </div>\n        { error.length === 0 ? null : <Message negative>{error}</Message> }\n        <Form onSubmit={handleSubmit}>\n          <Form.Field>\n            <label>Käyttäjätunnus</label>\n            <Form.Input\n              placeholder=\"Kirjoita käyttäjätunnus\"\n              icon=\"user\"\n              iconPosition=\"left\"\n              onChange={({ target }) => setUsername(target.value)}/>\n          </Form.Field>\n          <Form.Field >\n            <label>Salasana</label>\n            <Form.Input\n              placeholder=\"Kirjoita salasana\"\n              type=\"password\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              onChange={({ target }) => setPassword(target.value)} />\n          </Form.Field>\n          <div style={{ textAlign: 'center', padding: '10px' }}>\n            <Button positive>Kirjaudu sisään</Button>\n          </div>\n        </Form>\n        <Divider />\n        <div style={{ textAlign: 'center' }}>\n          <p>Ei käyttäjätunnusta?</p>\n          <Button icon=\"signup\" content=\"Luo uusi käyttäjätunnus\" onClick={onSignupClick()}/>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default connect(\n  state => ({\n    loginModal: state.loginModal\n  }),\n  { closeLoginModal, login, notify }\n)(withRouter(LoginForm));","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Grid, Icon, Card, Input, Button, Divider } from 'semantic-ui-react';\n\nconst UserCard = ({ user }) => {\n  if (!user) return null;\n  return (\n    <Card\n      color=\"teal\"\n      as={Link}\n      to={`/users/${user.id}`}\n      style={{ textAlign: 'center' }}>\n      <Card.Content>\n        <Card.Header>\n          <Icon name=\"user outline\" />\n          {user.username}\n        </Card.Header>\n      </Card.Content>\n    </Card>\n  );\n};\n\nconst Users = ({ users }) => {\n  const [searchFilter, setSearchFilter] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n\n  const searchUsers = () => {\n    const matchingUsers = searchFilter.length > 0\n      ? users.filter(user => user.username.toLowerCase().includes(searchFilter))\n      : [];\n    setSearchResult(matchingUsers);\n  };\n\n  const mostRecipes = () => {\n    let sortedByRecipes = [...users];\n    sortedByRecipes.sort((a, b) => {\n      if (a.recipes.length < b.recipes.length) {\n        return 1;\n      } else if (a.recipes.length > b.recipes.length) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n    return sortedByRecipes.slice(0,3);\n  };\n\n  return (\n    <Grid padded>\n      <Grid.Row>\n        <Grid.Column>\n          <h2>Käyttäjät</h2>\n          <Divider />\n          <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n            <h3>Hae käyttäjiä</h3>\n            <p>Hae käyttäjiä kirjoittamalla käyttäjätunnus tai sen osa ja klikkaa &quot;Hae&quot;.</p>\n            <Input icon=\"search\" iconPosition=\"left\" placeholder=\"Kirjoita käyttäjätunnus\"\n              value={searchFilter}\n              style={{ marginBottom: '20px'}}\n              onChange={({ target }) => setSearchFilter(target.value)}\n              action={<Button onClick={() => searchUsers()}>Hae</Button>}/>\n            { searchResult.length === 0\n              ? ''\n              : <p style={{ fontSize: '16px', fontWeight: 'bold' }}>\n                  Käyttäjät hakusanalla &quot;{searchFilter}&quot;\n              </p>}\n            <Card.Group centered>{searchResult.map(user => <UserCard key={user.id} user={user} />)}</Card.Group>\n          </div>\n          <Divider />\n          <h3>Uusimmat käyttäjät</h3>\n          <Card.Group>\n            {users.slice(0,3).map(user => <UserCard key={user.id} user={user} />)}\n          </Card.Group>\n          <h3>Eniten reseptejä lisänneet käyttäjät</h3>\n          <Card.Group>\n            {mostRecipes().map(user => <UserCard key={user.id} user={user} />)}\n          </Card.Group>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default connect(\n  state => ({\n    users: state.users\n  })\n)(Users);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Grid, Form, Button, Icon, Accordion, List } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { createUser } from '../reducers/userReducer';\r\nimport { notify } from '../reducers/notificationReducer';\r\n\r\nconst SignupForm = (props) => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [showAccordion, setShowAccordion] = useState(false);\r\n\r\n  const validateFields = () => {\r\n    const fieldErrors = {};\r\n\r\n    if (!values.username) {\r\n      fieldErrors.username = 'Valitse käyttäjätunnus';\r\n    } else if (values.username.length < 3 || values.username.length > 20) {\r\n      fieldErrors.username = 'Käyttäjätunnuksen tulee olla 3-20 merkkiä pitkä';\r\n    } else if (!RegExp('^[a-zA-Z0-9_]*$').test(values.username)) {\r\n      fieldErrors.username = 'Kaikki käyttäjätunnuksen merkit eivät ole sallittuja';\r\n    }\r\n\r\n    if (!values.password) {\r\n      fieldErrors.password = 'Valitse salasana';\r\n      fieldErrors.passwordConfirm = 'Valitse salasana';\r\n    } else if (values.password.length < 10) {\r\n      fieldErrors.password = 'Salasanan tulee olla vähintään 10 merkkiä pitkä';\r\n    } else if (!RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.,:;-_])').test(values.password)) {\r\n      fieldErrors.password = 'Salasanassa ei ole kaikkia vaadittuja merkkejä';\r\n    }\r\n\r\n    if (values.passwordConfirm !== values.password) {\r\n      fieldErrors.passwordConfirm = 'Salasanat eivät ole samat';\r\n    }\r\n\r\n    let isValid = true;\r\n    setErrors(fieldErrors);\r\n    Object.values(fieldErrors).forEach(error => {\r\n      if (error) {\r\n        setShowAccordion(true);\r\n        return isValid = false;\r\n      }\r\n    });\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (validateFields()) {\r\n      try {\r\n        await props.createUser({\r\n          username: values.username,\r\n          password: values.password\r\n        });\r\n        setValues({ username: '', password: '', passwordConfirm: '' });\r\n        props.history.push('/');\r\n        props.notify('Rekisteröityminen onnistui! Voit nyt kirjautua sisään käyttäjätunnuksellasi.', 'success');\r\n      } catch (error) {\r\n        if (error.response && error.response.data.error.type === 'USERNAME_DUPLICATE') {\r\n          setErrors({ usernameDuplicate: 'Käyttäjätunnus on jo varattu' });\r\n        } else {\r\n          props.notify('Virhe käyttäjän luonnissa! Uutta käyttäjätunnusta ei luotu.', 'error');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = ({ target }) => {\r\n    setValues({ ...values, [target.name]: target.value });\r\n    setErrors({ ...errors, [target.name]: null });\r\n  };\r\n\r\n  const showError = (field) => {\r\n    if (errors[field]) {\r\n      return (\r\n        <div style={{ float: 'right' }}>\r\n          <Icon color=\"yellow\" name=\"exclamation triangle\" />\r\n          {errors[field]}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Grid padded>\r\n      <Grid.Row centered columns={1}>\r\n        <h2>Rekisteröidy</h2>\r\n        <Grid.Column width={8}>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Field error={(errors.username || errors.usernameDuplicate) && true}>\r\n              <label>Käyttäjätunnus {showError('username')}{showError('usernameDuplicate')}</label>\r\n              <input\r\n                placeholder=\"Kirjoita käyttäjätunnus\"\r\n                name=\"username\"\r\n                value={values.username}\r\n                onChange={handleChange} />\r\n            </Form.Field>\r\n            <Form.Field error={errors.password && true}>\r\n              <label>Salasana {showError('password')}</label>\r\n              <input\r\n                placeholder=\"Kirjoita salasana\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange} />\r\n            </Form.Field>\r\n            <Form.Field error={errors.passwordConfirm && true}>\r\n              <label>Vahvista salasana {showError('passwordConfirm')}</label>\r\n              <input\r\n                placeholder=\"Kirjoita salasana uudelleen\"\r\n                type=\"password\"\r\n                name=\"passwordConfirm\"\r\n                value={values.passwordConfirm}\r\n                onChange={handleChange} />\r\n            </Form.Field>\r\n            <div style={{ textAlign: 'center', paddingTop: '20px', paddingBottom: '20px' }}>\r\n              <Button positive>Luo käyttäjätunnus</Button>\r\n            </div>\r\n          </Form>\r\n          <Accordion>\r\n            <Accordion.Title active={showAccordion} onClick={() => setShowAccordion(!showAccordion)}>\r\n              <Icon name=\"question circle\" />Miten täytän lomakkeen? <Icon name=\"dropdown\" />\r\n            </Accordion.Title>\r\n            <Accordion.Content active={showAccordion}>\r\n              <List>\r\n                <List.Item>\r\n                  <List.Header>Käyttäjätunnus</List.Header>\r\n                  Käyttäjätunnuksen tulee olla 3-20 merkkiä pitkä ja se voi koostua kirjaimista, numeroista ja alaviivasta ( _ ).\r\n                  Lisäksi sen tulee olla uniikki, joten et voi valita käyttäjätunnusta, joka on jo käytössä.\r\n                </List.Item>\r\n                <List.Item>\r\n                  <List.Header>Salasana</List.Header>\r\n                  Salasanan tulee olla vähintään 10 merkkiä pitkä.\r\n                  Siinä tulee olla vähintään yksi merkki jokaisesta seuraavasta joukosta:\r\n                  <ul>\r\n                    <li>pieni kirjain (a-z)</li>\r\n                    <li>iso kirjain (A-Z)</li>\r\n                    <li>numero (0-9)</li>\r\n                    <li>erikoismerkki (, . - _ : ;)</li>\r\n                  </ul>\r\n                </List.Item>\r\n              </List>\r\n            </Accordion.Content>\r\n          </Accordion>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { createUser, notify }\r\n)(withRouter(SignupForm));","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Tab, Grid, Button, Modal } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport RecipeCard from '../components/RecipeCard';\nimport { removeUser } from '../reducers/userReducer';\nimport { notify } from '../reducers/notificationReducer';\n\nconst User = ({ loggedUser, user, selectedTab, removeUser, history, notify }) => {\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  if (!user) return null;\n\n  const loggedUserProfile = loggedUser && loggedUser.id === user.id;\n\n  const recipeGrid = (recipes) => {\n    return (\n      <Grid padded stackable columns={4}>\n        {recipes.map(recipe => <RecipeCard key={recipe.id} recipe={recipe} />)}\n      </Grid>\n    );\n  };\n\n  const paneStyle = {\n    minHeight: '200px',\n    marginBottom: '20px'\n  };\n\n  const recipePane = <Tab.Pane style={paneStyle}>\n    {user.recipes.length === 0 ? 'Ei lisättyjä reseptejä' : recipeGrid(user.recipes)}\n  </Tab.Pane>;\n\n  const favoritesPane = <Tab.Pane style={paneStyle}>\n    {user.favoriteRecipes.length === 0 ? 'Ei suosikkireseptejä' : recipeGrid(user.favoriteRecipes)}\n  </Tab.Pane>;\n\n  const panesToShow = loggedUserProfile\n    ? [{ menuItem: { key: 'all', icon: 'book', content: 'Omat reseptit' }, render: () => recipePane },\n      { menuItem: { key: 'favorites', icon: 'star', content: 'Suosikit' }, render: () => favoritesPane }]\n    : [{ menuItem: { key: 'all', icon: 'book', content: 'Käyttäjän reseptit' }, render: () => recipePane }];\n\n  const handleRemove = async () => {\n    setShowRemoveModal(false);\n    try {\n      await removeUser(user.id);\n      history.push('/');\n      notify('Käyttäjätili poistettu!', 'success');\n    } catch (error) {\n      notify('Käyttäjätilin poistaminen ei onnistunut', 'error');\n    }\n  };\n\n  const removeUserModal = () => (\n    <Modal size=\"tiny\" open={showRemoveModal} onClose={() => setShowRemoveModal(false)}>\n      <Modal.Header>Poistetaanko käyttäjätili?</Modal.Header>\n      <Modal.Content>\n        <p>Haluatko varmasti poistaa käyttäjätilisi?\n          Jos poistat käyttäjän, et voi enää kirjautua sisään, luoda reseptejä, muokata aiemmin luomiasi reseptejä jne.\n        </p>\n        <p>\n          Käyttäjän poistaminen on peruuttamatonta, eikä poistettua käyttäjää voida enää palauttaa.\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => setShowRemoveModal(false)}>Peruuta</Button>\n        <Button\n          color=\"red\"\n          icon=\"user delete\"\n          labelPosition=\"left\"\n          content=\"Poista käyttäjä\"\n          onClick={handleRemove} />\n      </Modal.Actions>\n    </Modal>\n  );\n\n  return (\n    <>\n      {removeUserModal()}\n      <h2>{user.username}</h2>\n      <Button\n        icon=\"user delete\"\n        color=\"red\"\n        labelPosition=\"left\"\n        content=\"Poista käyttäjätili\"\n        style={{ marginBottom: '-100px', float: 'right' }} \n        onClick={() => setShowRemoveModal(true)}/>\n      <Tab panes={panesToShow} defaultActiveIndex={selectedTab ? Number(selectedTab.tab) || 0 : 0} />\n    </>\n  );\n};\n\nexport default connect(\n  state => ({\n    loggedUser: state.loggedUser\n  }),\n  { removeUser, notify }\n)(withRouter(User));","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport CreateRecipe from './components/CreateRecipe';\nimport ModifyRecipe from './components/ModifyRecipe';\nimport RecipeList from './components/RecipeList';\nimport Recipe from './components/Recipe';\nimport Notification from './components/Notification';\nimport Dashboard from './components/Dashboard';\nimport MenuBar from './components/MenuBar';\nimport LoginForm from './components/LoginForm';\nimport Users from './components/Users';\nimport SignupForm from './components/SignupForm';\nimport User from './components/User';\nimport { initializeRecipes } from './reducers/recipeReducer';\nimport { initializeUsers } from './reducers/userReducer';\nimport { setInitialLoggedUser } from './reducers/loginReducer';\n\nfunction App(props) {\n  const { initializeRecipes,\n    initializeUsers,\n    setInitialLoggedUser } = props;\n\n  useEffect(() => {\n    initializeRecipes();\n    initializeUsers();\n  }, [initializeRecipes, initializeUsers]);\n\n  useEffect(() => {\n    const storedLoggedUser = window.localStorage.getItem('loggedCookbookUser');\n    if (storedLoggedUser) {\n      const user = JSON.parse(storedLoggedUser);\n      setInitialLoggedUser(user);\n    }\n  }, [setInitialLoggedUser]);\n\n  const recipeById = (id) => {\n    return props.recipes.find(recipe => recipe.id === id);\n  };\n\n  const userById = (id) => {\n    return props.users.find(user => user.id === id);\n  };\n\n  return (\n    <Container>\n      <Router>\n        <h1>Cookbook</h1>\n        <MenuBar />\n        <LoginForm />\n        <Notification />\n        <Route exact path=\"/\" render={() => <Dashboard />} />\n        <Route exact path=\"/recipes\" render={() => <RecipeList />} />\n        <Route exact path=\"/recipes/create\" render={() => (\n          props.loggedUser ? <CreateRecipe /> : <Redirect to=\"/\" />)}  />\n        <Route exact path=\"/recipes/:id\" render={({ match }) => <Recipe recipe={recipeById(match.params.id)}/>} />\n        <Route exact path=\"/recipes/:id/update\" render={({ match }) => <ModifyRecipe recipe={recipeById(match.params.id)}/>} />\n        <Route exact path=\"/users\" render={() => <Users />} />\n        <Route exact path=\"/users/:id\" render={({ match, location }) =>\n          <User user={userById(match.params.id)} selectedTab={location.state} />} />\n        <Route exact path=\"/signup\" render={() => (\n          props.loggedUser ? <Redirect to=\"/\" /> : <SignupForm /> )} />\n      </Router>\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes,\n    loggedUser: state.loggedUser,\n    users: state.users\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { initializeRecipes,\n    initializeUsers,\n    setInitialLoggedUser }\n)(App);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './App';\r\nimport recipeReducer from './reducers/recipeReducer';\r\nimport notificationReducer from './reducers/notificationReducer';\r\nimport loginModalReducer from './reducers/loginModalReducer';\r\nimport loginReducer from './reducers/loginReducer';\r\nimport userReducer from './reducers/userReducer';\r\n\r\nconst reducer = combineReducers({\r\n  recipes: recipeReducer,\r\n  notification: notificationReducer,\r\n  loginModal: loginModalReducer,\r\n  loggedUser: loginReducer,\r\n  users: userReducer,\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/default_picture.be56aade.jpg\";"],"sourceRoot":""}